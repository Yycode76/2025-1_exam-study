1. 씨앗 코드 (CRC 코드 등)
🔹 씨앗 코드란?
네트워크 전송 중 오류가 발생했는지 확인하는 방법.

'씨앗(seed)'처럼 어떤 **고정된 기준 값(제너레이터)**을 가지고 메시지를 나눠서 **나머지 값(CRC)**를 만드는 방식.

🔹 CRC (Cyclic Redundancy Check)
2진수 나눗셈 원리 사용 (중요!)

보낼 데이터 뒤에 0을 비트 수만큼 붙이고, 제너레이터와 나눈 후 나머지를 붙여 전송.

수신자는 똑같이 나눠보고, 나머지가 0이면 "오류 없음"이라고 판단.

📌 4비트 제너레이터면 데이터 뒤에 0000을 붙임 → 이진수로 나누기 시작
예시:

makefile
복사
편집
보낼 데이터: 110101  
제너레이터: 10011 (5비트니까 4개의 0을 뒤에 붙임 → 1101010000)
🔹 이더넷에서 CRC
이더넷 프레임의 맨 마지막에 CRC가 붙어 있음 (보통 32비트)

네트워크에서 데이터가 오가는 **링크 계층(2계층)**에서 사용

2. 이진수와 프레임 해석
🔹 이진수 이해법
그냥 외우지 말고 각 자리값을 이해하자 (2^0, 2^1, 2^2, ...)

예: 1011 = 1×2³ + 0×2² + 1×2¹ + 1×2⁰ = 11

🔹 네트워크 프레임
프레임 = (2계층에서 다루는 단위)

상위 계층의 데이터(패킷)를 감싸서 전송

프레임은 주소 정보 + 데이터 + 에러 검사 등을 포함

🔹 슬라이딩 윈도우
오류 제어 + 흐름 제어 기법

데이터 여러 개를 연속해서 보내고, 확인 응답(ACK)을 받아가며 조절

3. 프레임 구조와 제어 방식
🔹 프레임 구조
하드웨어 + 소프트웨어의 중간 성격

주요 구성:

프리앰블: 동기화용

주소 필드: 송신자, 수신자 MAC 주소

데이터 필드

CRC: 오류 체크

🔹 802 기술 (IEEE 802 시리즈)
네트워크 표준 규약 모음

802.3 → 유선 이더넷,
802.11 → 무선(Wi-Fi)
802.15 → 블루투스 등 저전력 통신

교수님 말씀처럼 "인터넷 제어의 틀"이 되는 규칙들이야!

4. 네트워크 계층과 프로토콜
🔹 계층 모델
OSI 7계층 모델과 TCP/IP 4계층 모델 존재

예시:

2계층: 데이터 링크 계층 (프레임)

3계층: 네트워크 계층 (IP 패킷)

4계층: 전송 계층 (TCP/UDP)

🔹 프로토콜
약속, 규칙이야. 각 계층마다 다름

예시:

2계층: Ethernet

3계층: IP

4계층: TCP, UDP

🔹 트레이드오프
속도 vs 정확성, 효율 vs 안정성 사이에서 균형을 맞추는 것

빠르게 보내려다보면 에러가 발생할 수도 있고, 너무 정확하려고 하면 속도가 느려짐

5. 인터넷 매체 접근
🔹 매체란?
데이터를 전달하는 통로
(유선, 무선, 광케이블 등)

🔹 주소
MAC 주소: 물리적인 주소, 바뀌지 않음

IP 주소: 논리적인 주소, 변경 가능

포트 번호: 통신하는 앱 구분

🔹 충돌과 경쟁
CSMA/CD: 충돌 감지

CSMA/CA: 충돌 회피 (무선에서 사용)

교수님이 강조한 “슬래시(/)”가 있는 이유:
CSMA/CD = Carrier Sense Multiple Access / Collision Detection

6. 주소와 네트워크
🔹 MAC 주소는 고정
주민등록번호처럼 기기마다 부여되는 고유값

바꿀 수 없고, 네트워크 장치 식별에 사용

🔹 네트워크 구조 변화
예전엔 버스형 (줄 하나에 여러 장치)

지금은 스타형 (허브/스위치 중심으로 연결)

7. 이더넷 충돌 방지
🔹 충돌 방지 방식
CSMA/CD: 유선 이더넷에서 사용
→ 먼저 듣고(감지), 보내고, 충돌 나면 뒤로 물러나고 재시도

CSMA/CA: 무선에서 사용
→ 먼저 듣고, 다른 장비가 안 보낼 것 같을 때 보내기

🔹 이론과 실제
완벽한 충돌 방지는 불가능

대신에 가능성 줄이는 방법들이 쓰이는 것
